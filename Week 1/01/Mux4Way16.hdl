// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
	Mux(a = a[0], b = b[0], sel = sel[0], out = mux1);
	Mux(a = c[0], b = d[0], sel = sel[0], out = mux2);
	Mux(a = mux1, b = mux2, sel = sel[1], out = out[0]);
	
	Mux(a = a[1], b = b[1], sel = sel[0], out = mux3);
	Mux(a = c[1], b = d[1], sel = sel[0], out = mux4);
	Mux(a = mux3, b = mux4, sel = sel[1], out = out[1]);
	
	Mux(a = a[2], b = b[2], sel = sel[0], out = mux5);
	Mux(a = c[2], b = d[2], sel = sel[0], out = mux6);
	Mux(a = mux5, b = mux6, sel = sel[1], out = out[2]);
	
	Mux(a = a[3], b = b[3], sel = sel[0], out = mux7);
	Mux(a = c[3], b = d[3], sel = sel[0], out = mux8);
	Mux(a = mux7, b = mux8, sel = sel[1], out = out[3]);
	
	Mux(a = a[4], b = b[4], sel = sel[0], out = mux66);
	Mux(a = c[4], b = d[4], sel = sel[0], out = mux85);
	Mux(a = mux66, b = mux85, sel = sel[1], out = out[4]);
	
	Mux(a = a[5], b = b[5], sel = sel[0], out = mux9);
	Mux(a = c[5], b = d[5], sel = sel[0], out = mux10);
	Mux(a = mux9, b = mux10, sel = sel[1], out = out[5]);
	
	Mux(a = a[6], b = b[6], sel = sel[0], out = mux11);
	Mux(a = c[6], b = d[6], sel = sel[0], out = mux12);
	Mux(a = mux11, b = mux12, sel = sel[1], out = out[6]);
	
	Mux(a = a[7], b = b[7], sel = sel[0], out = mux13);
	Mux(a = c[7], b = d[7], sel = sel[0], out = mux14);
	Mux(a = mux13, b = mux14, sel = sel[1], out = out[7]);
	
	Mux(a = a[8], b = b[8], sel = sel[0], out = mux15);
	Mux(a = c[8], b = d[8], sel = sel[0], out = mux16);
	Mux(a = mux15, b = mux16, sel = sel[1], out = out[8]);
	
	Mux(a = a[9], b = b[9], sel = sel[0], out = mux17);
	Mux(a = c[9], b = d[9], sel = sel[0], out = mux18);
	Mux(a = mux17, b = mux18, sel = sel[1], out = out[9]);
	
	Mux(a = a[10], b = b[10], sel = sel[0], out = mux19);
	Mux(a = c[10], b = d[10], sel = sel[0], out = mux20);
	Mux(a = mux19, b = mux20, sel = sel[1], out = out[10]);
	
	Mux(a = a[11], b = b[11], sel = sel[0], out = mux21);
	Mux(a = c[11], b = d[11], sel = sel[0], out = mux22);
	Mux(a = mux21, b = mux22, sel = sel[1], out = out[11]);
	
	Mux(a = a[12], b = b[12], sel = sel[0], out = mux23);
	Mux(a = c[12], b = d[12], sel = sel[0], out = mux24);
	Mux(a = mux23, b = mux24, sel = sel[1], out = out[12]);
	
	Mux(a = a[13], b = b[13], sel = sel[0], out = mux25);
	Mux(a = c[13], b = d[13], sel = sel[0], out = mux26);
	Mux(a = mux25, b = mux26, sel = sel[1], out = out[13]);
	
	Mux(a = a[14], b = b[14], sel = sel[0], out = mux27);
	Mux(a = c[14], b = d[14], sel = sel[0], out = mux28);
	Mux(a = mux27, b = mux28, sel = sel[1], out = out[14]);
	
	Mux(a = a[15], b = b[15], sel = sel[0], out = mux29);
	Mux(a = c[15], b = d[15], sel = sel[0], out = mux30);
	Mux(a = mux29, b = mux30, sel = sel[1], out = out[15]);
	
}

